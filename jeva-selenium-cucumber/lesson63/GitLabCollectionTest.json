{
	"info": {
		"_postman_id": "054700fb-3368-4552-9435-4c6d897ec733",
		"name": "GitLabCollection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26708920"
	},
	"item": [
		{
			"name": "USER",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "glpat-9KPswotUNGmig9Ah8scW",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://gitlab.com/api/v4/users/15",
					"protocol": "https",
					"host": [
						"gitlab",
						"com"
					],
					"path": [
						"api",
						"v4",
						"users",
						"15"
					]
				}
			},
			"response": []
		},
		{
			"name": "PROJECTID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"TourGuide\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "glpat-9KPswotUNGmig9Ah8scW",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://gitlab.com/api/v4/projects/44892740",
					"protocol": "https",
					"host": [
						"gitlab",
						"com"
					],
					"path": [
						"api",
						"v4",
						"projects",
						"44892740"
					]
				}
			},
			"response": []
		},
		{
			"name": "USER_WITH_PARAM",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Ameni Dridi\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "glpat-9KPswotUNGmig9Ah8scW",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://gitlab.com/api/v4/namespaces?per_user=50",
					"protocol": "https",
					"host": [
						"gitlab",
						"com"
					],
					"path": [
						"api",
						"v4",
						"namespaces"
					],
					"query": [
						{
							"key": "per_user",
							"value": "50"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PROJECT",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"AAAAAAA\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "glpat-9KPswotUNGmig9Ah8scW",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \r\n    \"description\": \"AAAAAAA\",\r\n    \"name\": \"POSTMAN\"\r\n    \r\n    \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://gitlab.com/api/v4/projects",
					"protocol": "https",
					"host": [
						"gitlab",
						"com"
					],
					"path": [
						"api",
						"v4",
						"projects"
					]
				}
			},
			"response": []
		},
		{
			"name": "PROJECT",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "glpat-9KPswotUNGmig9Ah8scW",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \r\n    \"description\": \"AAAAAAA\",\r\n    \"name\": \"POSTMAN222\"\r\n    \r\n    \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://gitlab.com/api/v4/projects/44893065",
					"protocol": "https",
					"host": [
						"gitlab",
						"com"
					],
					"path": [
						"api",
						"v4",
						"projects",
						"44893065"
					]
				}
			},
			"response": []
		},
		{
			"name": "PROJECT",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Accepted\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "glpat-9KPswotUNGmig9Ah8scW",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://gitlab.com/api/v4/projects/44893065",
					"protocol": "https",
					"host": [
						"gitlab",
						"com"
					],
					"path": [
						"api",
						"v4",
						"projects",
						"44893065"
					]
				}
			},
			"response": []
		},
		{
			"name": "GROUPS",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"ameni\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "glpat-9KPswotUNGmig9Ah8scW",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://gitlab.com/api/v4/groups",
					"protocol": "https",
					"host": [
						"gitlab",
						"com"
					],
					"path": [
						"api",
						"v4",
						"groups"
					]
				}
			},
			"response": []
		}
	]
}